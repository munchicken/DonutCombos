""" DonutCombos - Utility app to create code for multi-donuts-mod """

"""
lists
"""
icings = [ 'none', 'strawberry', 'chocolate', 'blueberry', 'vanilla' ]
sprinkles = [ 'none', 'green', 'blue', 'red', 'yellow', 'orange', 'rainbow' ]
fillings = [ 'none', 'strawberry', 'chocolate', 'vanilla', 'cookieDough', 'brownieBatter' ]
item1 = []
item2 = []
lang = []
recipe = []

"""
create item1 list
"""
count = 0
for icing in icings:
    for sprinkle in sprinkles:
        for filling in fillings:
            item1.append( 'public static ItemFood ' + icing + sprinkle.capitalize() + filling[0].upper() +
                          filling[1:] + 'Donut;' )
            count = count + 1

"""
create item2 list
"""
for icing in icings:
    for sprinkle in sprinkles:
        for filling in fillings:
            item2.append( icing + sprinkle.capitalize() + filling[0].upper() + filling[1:] + 'Donut = new Donut(Donut.Icing.' +
                          icing.upper() + ', Donut.Sprinkle.' + sprinkle.upper() + ', Donut.Fill.' + filling.upper() +
                          ');\n\tRegisterHelper.registerItem(' + icing + sprinkle.capitalize() + filling[0].upper() +
                          filling[1:] + 'Donut );' )

"""
create lang list
"""
for icing in icings:
    for sprinkle in sprinkles:
        for filling in fillings:
            item = 'item.' + icing.capitalize() + sprinkle.capitalize() + filling[0].upper() + filling[1:] + 'Donut.name='
            if icing != 'none':
                item = item + icing.capitalize()
            if sprinkle != 'none':
                item = item + ' ' + sprinkle.capitalize()
            if filling != 'none':
                item = item + ' ' + filling[0].upper() + filling[1:]
            item = item + ' Donut'
            lang.append( item )

"""
create recipe list
"""
for icing in icings:
    for sprinkle in sprinkles:
        for filling in fillings:
            if icing == 'none' and sprinkle == 'none' and filling == 'none':
                continue
            item = 'GameRegistry.addShapelessRecipe( new ItemStack( ModItem.' + icing + sprinkle.capitalize() + \
                   filling[0].upper() + filling[1:] + 'Donut), new Object[]{\n\t\tModItems.cookedDonut, '
            if icing != 'none':
                item = item + ', ModItems.' + icing + 'Icing, ModItems.pastryBag'
            if sprinkle != 'none':
                item = item + ', ModItems.' + sprinkle + 'Sprinkles, ModItems.shaker'
            if filling != 'none':
                item = item + ', ModItems.' + filling + 'Filling, ModItems.fillingTube'
            item = item + '\n\t});'
            recipe.append(item)

"""
output lists for copy/paste
"""
print (str(count) + ' Items generated\n')
print ('ModItems: \n')
print ('/*\n * begin - Auto generated by DonutCombos.py\n */')
for item in item1:
    print (item)
print ('/*\n * end - Auto generated by DonutCombos.py\n */')
print ('\nloadItems: \n')
print ('/*\n * begin - Auto generated by DonutCombos.py\n */')
for item in item2:
    print (item)
print ('/*\n * end - Auto generated by DonutCombos.py\n */')
print ('\nen_US.lang: \n')
print ('/*\n * begin - Auto generated by DonutCombos.py\n */')
for item in lang:
    print (item)
print ('/*\n * end - Auto generated by DonutCombos.py\n */')
print ('\nModRecipes: \n')
print ('/*\n * begin - Auto generated by DonutCombos.py\n */')
for item in recipe:
    print (item)
print ('/*\n * end - Auto generated by DonutCombos.py\n */')
